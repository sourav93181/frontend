{"ast":null,"code":"import MakeRequest from \"../../utils/apiHandler\";\n\n// export async function GetCompanyById(body) {\n//   try {\n//     let result = await MakeRequest(\"http://127.0.0.1:8000/api/\").post(body);\n//     console.log(\"FROM Agent Api \", result);\n//     if (result.status === 200) {\n//       return { state: true, data: result.data };\n//     } else {\n//       console.log(result.data.message)\n//       return { state: false, data: result.data.message };\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// export async function sigupAgentApiCall(body) {\n//   try {\n//     let result = await MakeRequest(\"http://127.0.0.1:8000/api/\").put(body);\n//     console.log(\"FROM Agent signupAPI \", result);\n//     if (result.status === 200) {\n//       return { state: true, data: result.data.message };\n//     } else {\n//       console.log(result.data.message)\n//       return { state: false, data: result.data.message };\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\nexport async function GetCompanys(body) {\n  let result = await MakeRequest.fetch(`http://127.0.0.1:8000/api/`).get();\n  console.log(\"FROM LoginAPI \", result);\n  console.log(\"api try block ok\");\n  if (result.status === 200) {\n    console.log(\"api status code ok\");\n    //   console.log(\"FROM LoginAPI \", result);\n    return {\n      state: true,\n      data: result.data\n    };\n  } else {\n    console.log(\"api status not ok\");\n    console.log(\"FROM LoginAPI \", result);\n    return {\n      state: false,\n      data: result.message\n    };\n  }\n}\n_c = GetCompanys;\nexport async function GetCompanyById(body) {\n  let result = await MakeRequest(`http://127.0.0.1:8000/api/`).get(body);\n  console.log(\"FROM LoginAPI \", result);\n  console.log(\"api try block ok\");\n  if (result.status === 200) {\n    console.log(\"api status code ok\");\n    //   console.log(\"FROM LoginAPI \", result);\n    return {\n      state: true,\n      data: result.data\n    };\n  } else {\n    console.log(\"api status not ok\");\n    console.log(\"FROM LoginAPI \", result);\n    return {\n      state: false,\n      data: result.message\n    };\n  }\n}\n_c2 = GetCompanyById;\nvar _c, _c2;\n$RefreshReg$(_c, \"GetCompanys\");\n$RefreshReg$(_c2, \"GetCompanyById\");","map":{"version":3,"names":["MakeRequest","GetCompanys","body","result","fetch","get","console","log","status","state","data","message","GetCompanyById"],"sources":["C:/Users/soura/OneDrive/Desktop/React/c/src/api/companyDetail/api.js"],"sourcesContent":["import MakeRequest from \"../../utils/apiHandler\";\r\n\r\n// export async function GetCompanyById(body) {\r\n//   try {\r\n//     let result = await MakeRequest(\"http://127.0.0.1:8000/api/\").post(body);\r\n//     console.log(\"FROM Agent Api \", result);\r\n//     if (result.status === 200) {\r\n//       return { state: true, data: result.data };\r\n//     } else {\r\n//       console.log(result.data.message)\r\n//       return { state: false, data: result.data.message };\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// }\r\n\r\n// export async function sigupAgentApiCall(body) {\r\n//   try {\r\n//     let result = await MakeRequest(\"http://127.0.0.1:8000/api/\").put(body);\r\n//     console.log(\"FROM Agent signupAPI \", result);\r\n//     if (result.status === 200) {\r\n//       return { state: true, data: result.data.message };\r\n//     } else {\r\n//       console.log(result.data.message)\r\n//       return { state: false, data: result.data.message };\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// }\r\nexport async function GetCompanys(body) {\r\n    let result = await MakeRequest.fetch(\r\n      `http://127.0.0.1:8000/api/`\r\n    ).get();\r\n    console.log(\"FROM LoginAPI \", result);\r\n    console.log(\"api try block ok\");\r\n    if (result.status === 200) {\r\n      console.log(\"api status code ok\");\r\n    //   console.log(\"FROM LoginAPI \", result);\r\n      return { state: true, data: result.data };\r\n    } else {\r\n      console.log(\"api status not ok\");\r\n      console.log(\"FROM LoginAPI \", result);\r\n      return { state: false, data: result.message };\r\n    }\r\n\r\n}\r\n\r\nexport async function GetCompanyById(body) {\r\n  let result = await MakeRequest(\r\n   ( `http://127.0.0.1:8000/api/`)\r\n  ).get(body);\r\n  console.log(\"FROM LoginAPI \", result);\r\n  console.log(\"api try block ok\");\r\n  if (result.status === 200) {\r\n    console.log(\"api status code ok\");\r\n  //   console.log(\"FROM LoginAPI \", result);\r\n    return { state: true, data: result.data };\r\n  } else {\r\n    console.log(\"api status not ok\");\r\n    console.log(\"FROM LoginAPI \", result);\r\n    return { state: false, data: result.message };\r\n  }\r\n\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,WAAW,CAACC,IAAI,EAAE;EACpC,IAAIC,MAAM,GAAG,MAAMH,WAAW,CAACI,KAAK,CACjC,4BAA2B,CAC7B,CAACC,GAAG,EAAE;EACPC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,MAAM,CAAC;EACrCG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,IAAIJ,MAAM,CAACK,MAAM,KAAK,GAAG,EAAE;IACzBF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACnC;IACE,OAAO;MAAEE,KAAK,EAAE,IAAI;MAAEC,IAAI,EAAEP,MAAM,CAACO;IAAK,CAAC;EAC3C,CAAC,MAAM;IACLJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,MAAM,CAAC;IACrC,OAAO;MAAEM,KAAK,EAAE,KAAK;MAAEC,IAAI,EAAEP,MAAM,CAACQ;IAAQ,CAAC;EAC/C;AAEJ;AAAC,KAhBqBV,WAAW;AAkBjC,OAAO,eAAeW,cAAc,CAACV,IAAI,EAAE;EACzC,IAAIC,MAAM,GAAG,MAAMH,WAAW,CAC1B,4BAA2B,CAC9B,CAACK,GAAG,CAACH,IAAI,CAAC;EACXI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,MAAM,CAAC;EACrCG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,IAAIJ,MAAM,CAACK,MAAM,KAAK,GAAG,EAAE;IACzBF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACnC;IACE,OAAO;MAAEE,KAAK,EAAE,IAAI;MAAEC,IAAI,EAAEP,MAAM,CAACO;IAAK,CAAC;EAC3C,CAAC,MAAM;IACLJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,MAAM,CAAC;IACrC,OAAO;MAAEM,KAAK,EAAE,KAAK;MAAEC,IAAI,EAAEP,MAAM,CAACQ;IAAQ,CAAC;EAC/C;AAEF;AAAC,MAhBqBC,cAAc;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}