{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soura\\\\OneDrive\\\\Desktop\\\\workify\\\\React\\\\myapp\\\\src\\\\screen\\\\Alljob\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card } from '../../components';\nimport \"./style.css\";\nimport logo from '../../assests/AlljobAssest/a.png';\nimport { GetCompanyById } from '../../api/companyDetail/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Alljob(props) {\n  _s();\n  var _data;\n  const a = [1, 2, 3, 4, 5];\n  const [data, setdata] = useState([]);\n  async function GetCompany() {\n    const res = await GetCompanyById();\n    if (res.state) {\n      console.log(\"success res\");\n      setdata(res.data.data);\n      //   window.location.reload();\n      console.log(res.data);\n      data = re;\n    } else {\n      console.log(\"error\");\n    }\n  }\n  useEffect(() => {\n    GetCompany();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"logo-set\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"logo-setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-jobs\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"job-name\",\n        children: (_data = data) === null || _data === void 0 ? void 0 : _data.map(item => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            companyName: item.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n_s(Alljob, \"qLEflTOmXrzTZJfh2c5W/ZOvfY8=\");\n_c = Alljob;\nvar _c;\n$RefreshReg$(_c, \"Alljob\");","map":{"version":3,"names":["React","useEffect","useState","Card","logo","GetCompanyById","Alljob","props","a","data","setdata","GetCompany","res","state","console","log","re","map","item","companyName"],"sources":["C:/Users/soura/OneDrive/Desktop/workify/React/myapp/src/screen/Alljob/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Card } from '../../components';\r\nimport \"./style.css\"\r\nimport logo from '../../assests/AlljobAssest/a.png'\r\nimport { GetCompanyById } from '../../api/companyDetail/api';\r\nexport default function Alljob(props) {\r\n    const a=[1,2,3,4,5]\r\n    const [data, setdata] = useState([]);\r\n    async function GetCompany() {\r\n        const res = await GetCompanyById();\r\n        if (res.state) {\r\n          console.log(\"success res\");\r\n          setdata(res.data.data)\r\n        //   window.location.reload();\r\n          console.log(res.data)\r\n          data=re\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      }\r\n\r\n      useEffect(() => {\r\n        GetCompany();\r\n\r\n      }, []);\r\n    return (\r\n      <div className='cont'>\r\n        <span className='logo-set'>\r\n            <img src={logo} className='logo-setting' />\r\n        </span>\r\n        <div className='all-jobs'>\r\n            <span className='job-name'>\r\n                {data?.map((item)=>{\r\n                    return (\r\n                        <Card companyName={item.companyName}/>\r\n                    )\r\n                })}\r\n            </span>\r\n        </div>\r\n      </div>  \r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,kCAAkC;AACnD,SAASC,cAAc,QAAQ,6BAA6B;AAAC;AAC7D,eAAe,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EAAA;EAClC,MAAMC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,eAAeS,UAAU,GAAG;IACxB,MAAMC,GAAG,GAAG,MAAMP,cAAc,EAAE;IAClC,IAAIO,GAAG,CAACC,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BL,OAAO,CAACE,GAAG,CAACH,IAAI,CAACA,IAAI,CAAC;MACxB;MACEK,OAAO,CAACC,GAAG,CAACH,GAAG,CAACH,IAAI,CAAC;MACrBA,IAAI,GAACO,EAAE;IACT,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB;EACF;EAEAd,SAAS,CAAC,MAAM;IACdU,UAAU,EAAE;EAEd,CAAC,EAAE,EAAE,CAAC;EACR,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAM,SAAS,EAAC,UAAU;MAAA,uBACtB;QAAK,GAAG,EAAEP,IAAK;QAAC,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACxC,eACP;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAM,SAAS,EAAC,UAAU;QAAA,mBACrBK,IAAI,0CAAJ,MAAMQ,GAAG,CAAEC,IAAI,IAAG;UACf,oBACI,QAAC,IAAI;YAAC,WAAW,EAAEA,IAAI,CAACC;UAAY;YAAA;YAAA;YAAA;UAAA,QAAE;QAE9C,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GApCuBb,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}